const x = {
  props: {
    pageProps: {
      dehydratedState: {
        mutations: [],
        queries: [
          {
            state: {
              data: {
                question: {
                  questionId: "328",
                  questionFrontendId: "328",
                  title: "Odd Even Linked List",
                  titleSlug: "odd-even-linked-list",
                  isPaidOnly: false,
                  difficulty: "Medium",
                  likes: 6700,
                  dislikes: 405,
                },
              },
              dataUpdateCount: 1,
              dataUpdatedAt: 1670298048725,
              error: null,
              errorUpdateCount: 0,
              errorUpdatedAt: 0,
              fetchFailureCount: 0,
              fetchMeta: null,
              isFetching: false,
              isInvalidated: false,
              isPaused: false,
              status: "success",
            },
            queryKey: [
              "questionTitle",
              {
                titleSlug: "odd-even-linked-list",
              },
            ],
            queryHash: '["questionTitle",{"titleSlug":"odd-even-linked-list"}]',
          },
          {
            state: {
              data: {
                languageList: [
                  {
                    id: 0,
                    name: "cpp",
                  },
                  {
                    id: 1,
                    name: "java",
                  },
                  {
                    id: 2,
                    name: "python",
                  },
                  {
                    id: 11,
                    name: "python3",
                  },
                  {
                    id: 3,
                    name: "mysql",
                  },
                  {
                    id: 14,
                    name: "mssql",
                  },
                  {
                    id: 15,
                    name: "oraclesql",
                  },
                  {
                    id: 4,
                    name: "c",
                  },
                  {
                    id: 5,
                    name: "csharp",
                  },
                  {
                    id: 6,
                    name: "javascript",
                  },
                  {
                    id: 7,
                    name: "ruby",
                  },
                  {
                    id: 8,
                    name: "bash",
                  },
                  {
                    id: 9,
                    name: "swift",
                  },
                  {
                    id: 10,
                    name: "golang",
                  },
                  {
                    id: 12,
                    name: "scala",
                  },
                  {
                    id: 16,
                    name: "html",
                  },
                  {
                    id: 17,
                    name: "pythonml",
                  },
                  {
                    id: 13,
                    name: "kotlin",
                  },
                  {
                    id: 18,
                    name: "rust",
                  },
                  {
                    id: 19,
                    name: "php",
                  },
                  {
                    id: 20,
                    name: "typescript",
                  },
                  {
                    id: 21,
                    name: "racket",
                  },
                  {
                    id: 22,
                    name: "erlang",
                  },
                  {
                    id: 23,
                    name: "elixir",
                  },
                  {
                    id: 24,
                    name: "dart",
                  },
                ],
              },
              dataUpdateCount: 1,
              dataUpdatedAt: 1670298048725,
              error: null,
              errorUpdateCount: 0,
              errorUpdatedAt: 0,
              fetchFailureCount: 0,
              fetchMeta: null,
              isFetching: false,
              isInvalidated: false,
              isPaused: false,
              status: "success",
            },
            queryKey: ["languageList", {}],
            queryHash: '["languageList",{}]',
          },
          { //2
            state: {
              data: {
                question: {
                  questionId: "328",
                  questionFrontendId: "328",
                  codeSnippets: [
                    {
                      lang: "C++",
                      langSlug: "cpp",
                      code: "/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* oddEvenList(ListNode* head) {\n        \n    }\n};",
                    },
                    {
                      lang: "Java",
                      langSlug: "java",
                      code: "/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode oddEvenList(ListNode head) {\n        \n    }\n}",
                    },
                    {
                      lang: "Python",
                      langSlug: "python",
                      code: '# Definition for singly-linked list.\n# class ListNode(object):\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution(object):\n    def oddEvenList(self, head):\n        """\n        :type head: ListNode\n        :rtype: ListNode\n        """\n        ',
                    },
                    {
                      lang: "Python3",
                      langSlug: "python3",
                      code: "# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def oddEvenList(self, head: Optional[ListNode]) -> Optional[ListNode]:\n        ",
                    },
                    {
                      lang: "C",
                      langSlug: "c",
                      code: "/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     struct ListNode *next;\n * };\n */\nstruct ListNode* oddEvenList(struct ListNode* head){\n\n}",
                    },
                    {
                      lang: "C#",
                      langSlug: "csharp",
                      code: "/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public int val;\n *     public ListNode next;\n *     public ListNode(int val=0, ListNode next=null) {\n *         this.val = val;\n *         this.next = next;\n *     }\n * }\n */\npublic class Solution {\n    public ListNode OddEvenList(ListNode head) {\n        \n    }\n}",
                    },
                    {
                      lang: "JavaScript",
                      langSlug: "javascript",
                      code: "/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\nvar oddEvenList = function(head) {\n    \n};",
                    },
                    {
                      lang: "Ruby",
                      langSlug: "ruby",
                      code: "# Definition for singly-linked list.\n# class ListNode\n#     attr_accessor :val, :next\n#     def initialize(val = 0, _next = nil)\n#         @val = val\n#         @next = _next\n#     end\n# end\n# @param {ListNode} head\n# @return {ListNode}\ndef odd_even_list(head)\n    \nend",
                    },
                    {
                      lang: "Swift",
                      langSlug: "swift",
                      code: "/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     public var val: Int\n *     public var next: ListNode?\n *     public init() { self.val = 0; self.next = nil; }\n *     public init(_ val: Int) { self.val = val; self.next = nil; }\n *     public init(_ val: Int, _ next: ListNode?) { self.val = val; self.next = next; }\n * }\n */\nclass Solution {\n    func oddEvenList(_ head: ListNode?) -> ListNode? {\n        \n    }\n}",
                    },
                    {
                      lang: "Go",
                      langSlug: "golang",
                      code: "/**\n * Definition for singly-linked list.\n * type ListNode struct {\n *     Val int\n *     Next *ListNode\n * }\n */\nfunc oddEvenList(head *ListNode) *ListNode {\n    \n}",
                    },
                    {
                      lang: "Scala",
                      langSlug: "scala",
                      code: "/**\n * Definition for singly-linked list.\n * class ListNode(_x: Int = 0, _next: ListNode = null) {\n *   var next: ListNode = _next\n *   var x: Int = _x\n * }\n */\nobject Solution {\n    def oddEvenList(head: ListNode): ListNode = {\n        \n    }\n}",
                    },
                    {
                      lang: "Kotlin",
                      langSlug: "kotlin",
                      code: "/**\n * Example:\n * var li = ListNode(5)\n * var v = li.`val`\n * Definition for singly-linked list.\n * class ListNode(var `val`: Int) {\n *     var next: ListNode? = null\n * }\n */\nclass Solution {\n    fun oddEvenList(head: ListNode?): ListNode? {\n        \n    }\n}",
                    },
                    {
                      lang: "Rust",
                      langSlug: "rust",
                      code: "// Definition for singly-linked list.\n// #[derive(PartialEq, Eq, Clone, Debug)]\n// pub struct ListNode {\n//   pub val: i32,\n//   pub next: Option<Box<ListNode>>\n// }\n// \n// impl ListNode {\n//   #[inline]\n//   fn new(val: i32) -> Self {\n//     ListNode {\n//       next: None,\n//       val\n//     }\n//   }\n// }\nimpl Solution {\n    pub fn odd_even_list(head: Option<Box<ListNode>>) -> Option<Box<ListNode>> {\n        \n    }\n}",
                    },
                    {
                      lang: "PHP",
                      langSlug: "php",
                      code: "/**\n * Definition for a singly-linked list.\n * class ListNode {\n *     public $val = 0;\n *     public $next = null;\n *     function __construct($val = 0, $next = null) {\n *         $this->val = $val;\n *         $this->next = $next;\n *     }\n * }\n */\nclass Solution {\n\n    /**\n     * @param ListNode $head\n     * @return ListNode\n     */\n    function oddEvenList($head) {\n        \n    }\n}",
                    },
                    {
                      lang: "TypeScript",
                      langSlug: "typescript",
                      code: "/**\n * Definition for singly-linked list.\n * class ListNode {\n *     val: number\n *     next: ListNode | null\n *     constructor(val?: number, next?: ListNode | null) {\n *         this.val = (val===undefined ? 0 : val)\n *         this.next = (next===undefined ? null : next)\n *     }\n * }\n */\n\nfunction oddEvenList(head: ListNode | null): ListNode | null {\n\n};",
                    },
                    {
                      lang: "Racket",
                      langSlug: "racket",
                      code: "; Definition for singly-linked list:\n#|\n\n; val : integer?\n; next : (or/c list-node? #f)\n(struct list-node\n  (val next) #:mutable #:transparent)\n\n; constructor\n(define (make-list-node [val 0])\n  (list-node val #f))\n\n|#\n\n(define/contract (odd-even-list head)\n  (-> (or/c list-node? #f) (or/c list-node? #f))\n\n  )",
                    },
                    {
                      lang: "Erlang",
                      langSlug: "erlang",
                      code: "%% Definition for singly-linked list.\n%%\n%% -record(list_node, {val = 0 :: integer(),\n%%                     next = null :: 'null' | #list_node{}}).\n\n-spec odd_even_list(Head :: #list_node{} | null) -> #list_node{} | null.\nodd_even_list(Head) ->\n  .",
                    },
                    {
                      lang: "Elixir",
                      langSlug: "elixir",
                      code: "# Definition for singly-linked list.\n#\n# defmodule ListNode do\n#   @type t :: %__MODULE__{\n#           val: integer,\n#           next: ListNode.t() | nil\n#         }\n#   defstruct val: 0, next: nil\n# end\n\ndefmodule Solution do\n  @spec odd_even_list(head :: ListNode.t | nil) :: ListNode.t | nil\n  def odd_even_list(head) do\n\n  end\nend",
                    },
                    {
                      lang: "Dart",
                      langSlug: "dart",
                      code: "/**\n * Definition for singly-linked list.\n * class ListNode {\n *   int val;\n *   ListNode? next;\n *   ListNode([this.val = 0, this.next]);\n * }\n */\nclass Solution {\n  ListNode? oddEvenList(ListNode? head) {\n\n  }\n}",
                    },
                  ],
                  envInfo:
                    '{"cpp": ["C++", "<p>Compiled with <code> clang 11 </code> using the latest C++ 17 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level two optimization (<code>-O2</code>). <a href=\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\" target=\\"_blank\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>"], "java": ["Java", "<p><code>OpenJDK 17</code>. Java 8 features such as lambda expressions and stream API can be used. </p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n<p>Includes <code>Pair</code> class from https://docs.oracle.com/javase/8/javafx/api/javafx/util/Pair.html.</p>"], "python": ["Python", "<p><code>Python 2.7.12</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\"https://docs.python.org/2/library/array.html\\" target=\\"_blank\\">array</a>, <a href=\\"https://docs.python.org/2/library/bisect.html\\" target=\\"_blank\\">bisect</a>, <a href=\\"https://docs.python.org/2/library/collections.html\\" target=\\"_blank\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\"http://www.grantjenks.com/docs/sortedcontainers/\\" target=\\"_blank\\">sortedcontainers</a> library.</p>\\r\\n\\r\\n<p>Note that Python 2.7 <a href=\\"https://www.python.org/dev/peps/pep-0373/\\" target=\\"_blank\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>"], "c": ["C", "<p>Compiled with <code>gcc 8.2</code> using the gnu11 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\" target=\\"_blank\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\"https://troydhanson.github.io/uthash/\\" target=\\"_blank\\">uthash</a>. \\"uthash.h\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we\'ll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>"], "csharp": ["C#", "<p><a href=\\"https://learn.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-10\\" target=\\"_blank\\">C# 10 with .NET 6 runtime</a></p>"], "javascript": ["JavaScript", "<p><code>Node.js 16.13.2</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\"http://node.green/\\" target=\\"_blank\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\"https://lodash.com\\" target=\\"_blank\\">lodash.js</a> library is included by default.</p>\\r\\n\\r\\n<p>For Priority Queue / Queue data structures, you may use <a href=\\"https://github.com/datastructures-js/priority-queue\\" target=\\"_blank\\">datastructures-js/priority-queue</a> and <a href=\\"https://github.com/datastructures-js/queue\\" target=\\"_blank\\">datastructures-js/queue</a>.</p>"], "ruby": ["Ruby", "<p><code>Ruby 3.1</code></p>\\r\\n\\r\\n<p>Some common data structure implementations are provided in the Algorithms module: https://www.rubydoc.info/github/kanwei/algorithms/Algorithms</p>"], "swift": ["Swift", "<p><code>Swift 5.5.2</code>.</p>"], "golang": ["Go", "<p><code>Go 1.17.6</code>.</p>\\r\\n\\r\\n<p>Support <a href=\\"https://godoc.org/github.com/emirpasic/gods\\" target=\\"_blank\\">https://godoc.org/github.com/emirpasic/gods</a> library.</p>"], "python3": ["Python3", "<p><code>Python 3.10</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\"https://docs.python.org/3/library/array.html\\" target=\\"_blank\\">array</a>, <a href=\\"https://docs.python.org/3/library/bisect.html\\" target=\\"_blank\\">bisect</a>, <a href=\\"https://docs.python.org/3/library/collections.html\\" target=\\"_blank\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\"http://www.grantjenks.com/docs/sortedcontainers/\\" target=\\"_blank\\">sortedcontainers</a> library.</p>"], "scala": ["Scala", "<p><code>Scala 2.13.7</code>.</p>"], "kotlin": ["Kotlin", "<p><code>Kotlin 1.3.10</code>.</p>"], "rust": ["Rust", "<p><code>Rust 1.58.1</code></p>\\r\\n\\r\\n<p>Supports <a href=\\"https://crates.io/crates/rand\\" target=\\"_blank\\">rand </a> v0.6\\u00a0from crates.io</p>"], "php": ["PHP", "<p><code>PHP 8.1</code>.</p>\\r\\n<p>With bcmath module</p>"], "typescript": ["Typescript", "<p><code>TypeScript 4.5.4, Node.js 16.13.2</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\"http://node.green/\\" target=\\"_blank\\">new ES2020 features</a>.</p>\\r\\n\\r\\n<p><a href=\\"https://lodash.com\\" target=\\"_blank\\">lodash.js</a> library is included by default.</p>"], "racket": ["Racket", "<p>Run with <code>Racket 8.3</code>.</p>"], "erlang": ["Erlang", "Erlang/OTP 24.2"], "elixir": ["Elixir", "Elixir 1.13.0 with Erlang/OTP 24.2"], "dart": ["Dart", "<p>Dart 2.17.3</p>\\r\\n\\r\\n<p>Your code will be run directly without compiling</p>"]}',
                  enableRunCode: true,
                },
              },
              dataUpdateCount: 1,
              dataUpdatedAt: 1670298048751,
              error: null,
              errorUpdateCount: 0,
              errorUpdatedAt: 0,
              fetchFailureCount: 0,
              fetchMeta: null,
              isFetching: false,
              isInvalidated: false,
              isPaused: false,
              status: "success",
            },
            queryKey: [
              "questionEditorData",
              {
                titleSlug: "odd-even-linked-list",
              },
            ],
            queryHash:
              '["questionEditorData",{"titleSlug":"odd-even-linked-list"}]',
          },
          {
            state: {
              data: {
                question: {
                  isPaidOnly: false,
                },
              },
              dataUpdateCount: 1,
              dataUpdatedAt: 1670298048751,
              error: null,
              errorUpdateCount: 0,
              errorUpdatedAt: 0,
              fetchFailureCount: 0,
              fetchMeta: null,
              isFetching: false,
              isInvalidated: false,
              isPaused: false,
              status: "success",
            },
            queryKey: [
              "premiumQuestion",
              {
                titleSlug: "odd-even-linked-list",
              },
            ],
            queryHash:
              '["premiumQuestion",{"titleSlug":"odd-even-linked-list"}]',
          },
          {
            state: {
              data: {
                question: {
                  questionId: "328",
                  questionFrontendId: "328",
                  questionTitle: "Odd Even Linked List",
                  enableDebugger: true,
                  enableRunCode: true,
                  enableSubmit: true,
                  enableTestMode: false,
                  exampleTestcaseList: ["[1,2,3,4,5]", "[2,1,3,5,6,4,7]"],
                  metaData:
                    '{\r\n  "name": "oddEvenList",\r\n  "params": [\r\n    {\r\n      "name": "head",\r\n      "type": "ListNode",\r\n      "dealloc": false\r\n    }\r\n  ],\r\n  "return": {\r\n    "type": "ListNode",\r\n    "dealloc": true\r\n  }\r\n}',
                },
              },
              dataUpdateCount: 1,
              dataUpdatedAt: 1670298048739,
              error: null,
              errorUpdateCount: 0,
              errorUpdatedAt: 0,
              fetchFailureCount: 0,
              fetchMeta: null,
              isFetching: false,
              isInvalidated: false,
              isPaused: false,
              status: "success",
            },
            queryKey: [
              "consolePanelConfig",
              {
                titleSlug: "odd-even-linked-list",
              },
            ],
            queryHash:
              '["consolePanelConfig",{"titleSlug":"odd-even-linked-list"}]',
          },
          {
            state: {
              data: {
                questionTopicsList: {
                  totalNum: 3659,
                },
                questionDiscussionTopic: {
                  topLevelCommentCount: 17,
                },
              },
              dataUpdateCount: 1,
              dataUpdatedAt: 1670298048872,
              error: null,
              errorUpdateCount: 0,
              errorUpdatedAt: 0,
              fetchFailureCount: 0,
              fetchMeta: null,
              isFetching: false,
              isInvalidated: false,
              isPaused: false,
              status: "success",
            },
            queryKey: [
              "tabsStatus",
              {
                titleSlug: "odd-even-linked-list",
              },
            ],
            queryHash: '["tabsStatus",{"titleSlug":"odd-even-linked-list"}]',
          },
        ],
      },
      _nextI18Next: {
        initialI18nStore: {
          en: {
            common: {
              404: {
                title: "Page Not Found - LeetCode",
                pageNotFound: "Page Not Found",
                message:
                  "Sorry, but we can't find the page you are looking for...",
              },
              meta: {
                title: "",
                description:
                  "Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.",
                keywords: "",
              },
              ok: "OK",
              cancel: "Cancel",
              confirm: "Confirm",
              update: "Update",
              submit: "Submit",
              netFailed: "Something went wrong!",
              header: {
                logo: {
                  url: "",
                  description: "",
                },
                title: {
                  "problemset-all": "",
                },
                action: {
                  login: {
                    text: "",
                    url: "",
                  },
                },
              },
              conjunctions: {
                and: "and",
                or: "or",
              },
              pages: {
                leetcode: "LeetCode",
                explore: "Explore",
                problems: "Problems",
                interview: {
                  interview: "Interview",
                  onlineInterview: "Online Interview",
                  assessment: "Assessment",
                },
                contest: "Contest",
                discuss: "Discuss",
                store: {
                  store: "Store",
                  redeem: "Redeem",
                  premium: "Premium",
                  shop: "Micro-shop",
                },
                admin: {
                  admin: "Admin",
                  library: "Library",
                  review: "Review",
                  operations: "User Management",
                  scores: "Points",
                  contribute: "Contribution",
                  backend: "Administration",
                  internalContest: "Internal Contest Dashboard",
                  contestDashboard: "Contest Dashboard",
                  contestAdmin: "Contest Cheating Dashboard",
                  emailBatch: "Email Batch",
                  dangerZone: "Danger Zone",
                },
                mobileApp: "Mobile App",
                playground: "Playground",
                signIn: "Sign in",
                register: "Register",
                signOut: "Sign Out",
              },
              userMenu: {
                renew: "Renew",
                getPremium:
                  "Access all features with our Premium subscription!",
                orders: "Orders",
                translateQuestions: "Display problems in Chinese",
                unmockUser: "Unmock User",
                revertToOldVersion: "Revert to old version",
                categories: {
                  myList: "My Lists",
                  notebook: "Notebook",
                  submissions: "Submissions",
                  session: "Session",
                  points: "Points",
                  progress: "Progress",
                },
              },
              streakCounter: {
                finished: "Well done! Come back for tomorrow's challenge!",
                unfinished:
                  "Solve today's Daily Challenge to refresh your streak!",
                buyTimeTravelTicket: "Buy Time Travel Ticket",
                missedOneDayThisMonth: "You missed 1 day this month. ",
                missedDaysThisMonth: "You missed {{count}} days this month. ",
              },
              playground: {
                playground: "Playground",
                myPlaygrounds: "My Playgrounds",
                remainingPlaygrounds: "Remaining",
                renew: "Renew",
                templates: {
                  consoleApplication: "Console Application",
                  empty: "New Playground",
                  frontend: "Frontend",
                  machineLearning: "Machine Learning",
                },
              },
              links: {
                premium: "/subscribe/",
                discuss: "/discuss/",
                assessment: "/assessment/",
                shop: "https://detail.youzan.com/show/goods/newest?alias=271n43vr9hen7",
                onlineInterview: "https://interview.leetcode.com/interview/",
                profileArticles: "/submissions/",
                orders: "/store/orders/",
                explore: "/explore/",
                admin: {
                  scores: "/points/admin",
                  operations: "/user_management",
                },
                playground: "/playground",
              },
              pagination: {
                perpage: "/ page",
              },
              expand: "Expand",
              collapse: "Collapse",
              difficulty: {
                easy: "Easy",
                medium: "Medium",
                hard: "Hard",
              },
              easterEgg: {
                rewardMessage:
                  "Congratulations! You just found 10 LeetCoins. Happy LeetCoding!",
              },
              markdown: {
                heading: "heading",
                quote: "Quote",
              },
              mentions: {
                users: "Users",
                problems: "Problems",
              },
              confirmModal: {
                title: "Are you sure?",
                confirmBtn: "Confirm",
                cancelBtn: "Cancel",
              },
              saving: "Saving...",
              saved: "Saved",
              autoSaved: "Save automatically",
              loginRequired: "Sign in required",
              verifiedRequired: "You need to verify your email",
              phoneVerifiedRequired: "Your need to verify your phone",
              maybeVerifiedRequired: "You need to verify your email",
              dailyCheckIn: "+1 Daily Check-in",
              copied: "Copied!",
              survey: {
                veryDissatisfied: "Very Dissatisfied",
                verySatisfied: "Very Satisfied",
                next: "Next",
                continue: "Continue",
                submit: "Submit",
                questionNo: "Question {{current}} of {{total}}",
                thanksMsg: "🎉 Thanks for your feedback!",
              },
            },
            problems: {
              meta: {
                title: "{{title}} - LeetCode",
                description: "{{title}} - {{content}}",
                ogImage:
                  "https://leetcode.com/static/images/LeetCode_Sharing.png",
                defaultDescription:
                  "Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.",
              },
              tabs: {
                description: "Description",
                discussion: "Discussion",
                solutions: "Solutions",
                submissions: "Submissions",
              },
              lockedQuestion: {
                subscribeToUnlock: "Subscribe to unlock.",
                subscribeToUnlockMessage:
                  "Thanks for using LeetCode! To view this question you must subscribe to premium.",
                subscribe: "Subscribe",
              },
              feedback: {
                feedback: "Feedback",
                revertToOld: "Revert to last version",
              },
              satisfactionSurvey: {
                submitBtnText: "Get LeetCoins",
              },
            },
            console: {
              meta: {
                title: "Question Detail",
              },
              console: {
                console: "Console",
                run: "Run",
                to: "to",
                or: "or",
                submit: "Submit",
                execute: "Execute",
                resetTestcases: "Reset Testcases",
                debug: "Debug",
                testcase: "Testcase",
                debugger: "Debugger",
                testcaseNumber: "Case {{ number }}",
                cloneCurrentTestcase: "Clone current testcase",
                switchConsoleToLeft:
                  "Move console to the left side of the page",
                switchConsoleToRight:
                  "Move console to the right side of the page",
                testcasePlaceholder: "Enter Testcase",
                showFullTree: "Click to view the entire tree",
                fullTreeTooBig: "Data is too large to display",
                result: {
                  result: "Result",
                  stdout: "Stdout",
                  noResult: "You must run your code first",
                  slowdown: {
                    premium:
                      "You have attempted to run code too soon. Please try again in a few seconds.",
                    first:
                      "You have attempted to run code too soon. Please try again in a few seconds, or",
                    second: "Subscribe",
                    third: "to reduce wait time.",
                  },
                  networkError:
                    "Unknown network error. Please try reloading page.",
                  serverError:
                    "Unknown server error. Please contact our support team.",
                  compileError: "Compile Error",
                  runtimeError: "Runtime Error",
                  copyCompileError: "Copy error message to clipboard",
                  copyContent: "Copy content to clipboard",
                  copied: "Successfully copied to clipboard!",
                  outputLimitExceeded: "Output Limit Exceeded",
                  timeLimitExceeded: "Time Limit Exceeded",
                  memoryLimitExceeded: "Memory Limit Exceeded",
                  timeout: "Server Request Timeout",
                  internalError: "Internal Error",
                  accepted: "Accepted",
                  wrongAnswer: "Wrong Answer",
                  invalidTestcase: "Invalid Testcase",
                  runtime: "Runtime",
                  input: "Input",
                  output: "Output",
                  expected: "Expected",
                  contribution: "Contribute a testcase",
                  pending: "Pending...",
                  premiumPending: "Pending...",
                  judging: "Judging...",
                  debugging: "Debugging...",
                  speedUp: "Speed Up",
                  lastExecutedInput: "Last Executed Input",
                  testcasesPassed: "testcases passed",
                  useTestcaseAsInput: "Use Testcase as Input",
                  cantUseTestcaseAsInput:
                    "You have reached maximum number of testcases",
                  debugger: "Debugger",
                  moreLine_one: "more line",
                  moreLine_other: "more lines",
                },
                info: {
                  info: "Info",
                  content:
                    "<0>Are 'Run' results inconsistent with 'Submit' results? If you are using global/static variables or C/C++, please check</0> <1>this</1> <0>out.</0>",
                  ok: "Okay",
                  howToCreateBinaryTreeTestcases:
                    "How to create binary tree testcases",
                  howToCreateDatabaseTestcases:
                    "How to create database testcases",
                },
              },
              visualizer: {
                dataTooLarge:
                  "Data too large to be displayed, input would be truncated.",
                parseFailed: "Failed to parse your input, please check again.",
                dataNotSupported: "This doesn't support visualization.",
                outputDataTypeNotSupported:
                  "Output data type doesn't support visualization",
                initFailed:
                  "Failed to init the canvas, please refresh the page and try again.",
              },
              verifyEmail: "verify email",
              nonVerifyMsg: "Please verify email to run the code",
              signToRunOrSubmit: "You need to Login/Sign up to {{action}}",
              signToRunAndSubmit:
                "You need to <0>Login/Sign up</0> to run or submit",
              verifyToRunAndSubmit:
                "You need to <0>verify email</0> to execute or submit your code",
              notAvailableDuringDebugging: "Not available during debugging",
              notAvailableDuringExecuting: "Not available during executing",
              oneClickDebug: "One Click Debug",
            },
            "code-editor": {
              commonConfirmTitle: "Are you sure?",
              fullScreen: "Full screen",
              exitFullScreen: "Exit full screen",
              lsp: {
                autocomplete: "Auto",
                connectFail: "Autocomplete connect failure",
                langNotSupportLSP:
                  "The language is not supported by our platform",
                info: "Provides intelligent code completion based on language and an analysis of your source code.",
              },
              langNotSupportLSP:
                "The language is not supported by our platform",
              langInfo: "Language Information",
              settings: {
                name: "Settings",
                fontSize: "Font size",
                fontSizeDesc:
                  "Choose your preferred font size for the code editor.",
                theme: "Theme",
                themeDesc:
                  "Tired of the white background? Try different styles and syntax highlighting.",
                themeDark: "Dark",
                themeLight: "Light",
                themeSystem: "System",
                keyBinding: "Key binding",
                keyBindingDesc:
                  "Want to practice Vim or Emacs? We have these key binding options available for you.",
                keyBindingVim: "Vim",
                keyBindingEmacs: "Emacs",
                keyBindingStandard: "Standard",
                tabSize: "Tab size",
                tabSizeDesc: "Choose the width of a tab character.",
                spaces: "{{count}} spaces",
              },
              shortcuts: {
                name: "Editor Shortcuts",
                run: "Run code",
                submit: "Submit",
                debug: "Debug code",
                indent: "To indent one level",
                indentFew: "To indent one fewer levels",
                moveLines: "To move lines up/down",
                cut: "Delete line and copy to buffer",
                toggleComment: "Comment/uncomment current selection",
                undo: "Undo action",
                redo: "Redo action",
              },
              reset: {
                tip: "Reset to default code definition",
                confirmContent:
                  "Your current code will be discarded and reset to the default code!",
                resetServer: "Continue to work on your code from {{time}}",
                restore: "Restore",
              },
              history: {
                title: "{{lang}} Submission Notes",
                tip: "Submission Notes",
                description:
                  "Only the code submitted in the current language will be displayed; When you select and confirm the selection, your current code will be overwritten by the code you selected.",
                status: "Status",
                runtime: "Runtime",
                memory: "Memory",
                time: "Time",
                topic: "Topic",
                notes: "Notes",
                noNotes: "You haven't added notes to any submissions yet!",
              },
              timer: {
                start: "Start timer",
                hide: "Hide timer",
                show: "Show timer",
                reset: "Reset timer",
              },
              debugger: {
                loginToDebug: "You need to Login/Sign up to debug",
                name: "Debugger",
                stdout: "Standard output",
                input: "Input",
                enterTip: "Click on line number to add breakpoints",
                exit: "Exit",
                start: "Start Debug",
                stop: "Stop Debug",
                startShort: "Debug",
                stopShort: "Stop",
                watch: "Watch Expressions",
                local: "Local Variables",
                watchHolder: "Please enter the watch expressions value",
                controlStart: "Start Debug F5",
                controlForward: "Skip forward F5",
                controlStepOver: "Step over F10",
                controlStepOut: "Step out Ctrl+F11",
                controlStepOutMac: "Step out ⌘+F11",
                controlStepIn: "Step in Shift+F11",
                controlStepInMac: "Step in ⇧+F11",
                controlReset: "Reset Ctrl+Shift+F5",
                controlResetMac: "Reset ⌘+⇧+F5",
                exited: "Debugger session exited, terminate it?",
                startToWatch:
                  "Start debugging session to see watch expressions",
                watchTip: "You need to Start debugging to add value",
                startViewVars: "Start debugging session to see local variables",
                noVars: "No local variables detected",
                startViewOutput:
                  "Start the debugging session to check output here",
                noOutput: "No output yet...",
                edited: "The code has been modified, you can reload debug",
                cantAddTestcase: "You have reached maximum number of testcases",
              },
              markDownPlaceholder: "Type here...(Markdown is enabled)",
              retrieveCode: {
                tip: "Retrieve last submitted code",
                confirmContent:
                  "Your code will be discarded and replaced with your last submission's code!",
                noData: "You haven't submitted any code!",
              },
            },
            description: {
              status: {
                tried: "Attempted",
                ac: "Solved",
              },
              ok: "OK",
              somethingWentWrong: "Something went wrong",
              thanksForVoting: "Thanks for voting!",
              companies: "Companies",
              pastSixMonths: "0 - 6 months",
              pastYear: "6 months - 1 year",
              pastTwoYears: "1 year - 2 years",
              companyPremiumAccess:
                "Only Premium users can access company and interview frequency data.",
              companySubscribe: "Subscribe",
              hint: "Hint",
              showHints: "Show Hints",
              moreActions: "More Actions",
              feedback: "Feedback",
              showEnglish: "Show English Translation",
              showChinese: "Show Chinese Translation",
              addToListError: "Something went wrong. Please try again.",
              feedbackForm: {
                optionRequiredError: "Please select at least one option.",
                title: "Feedback",
                alternative:
                  "You may also <0>submit via Github</0> to get feedback in real time.",
                cancel: "Cancel",
                submit: "Submit",
                issuesEncountered: "Issues Encountered",
                problem: "Problem",
                additionalFeedback: "Additional Feedback",
                description:
                  "We try to keep our questions to the highest quality possible. Could you please tell us why you disliked this question?",
                somethingWentWrong: "Something went wrong",
                options: {
                  unclearDescription:
                    "Description or examples are unclear or incorrect",
                  unclearDifficulty: "Difficulty is inaccurate",
                  unclearTestCases: "Testcases are missing or incorrect",
                  runtimeStrict: "Runtime is too strict",
                  edgeCases: "Edge cases are too frustrating to solve",
                  other: "Other",
                  otherPlaceholder: "Additional feedback",
                },
              },
              accepted: "Accepted",
              submissions: "Submissions",
              acRate: "Acceptance Rate",
              copyright: "Copyright ©️ {{year}} LeetCode All rights reserved",
              yes: "Yes",
              no: "No",
              add2: "Add",
              seenBefore: "Seen this question in a real interview before?",
              whichCompany: "Which Company?",
              whichTimePeriod: "When did you encounter this question?",
              whichStage: "Which interview stage?",
              thanksForFeedback: "🎉 Thank you for your feedback!",
              relatedTopics: "Related Topics",
              add: "Add",
              remove: "Remove",
              createNewList: "Create a new list",
              nameListPlaceholder: "Enter a list name",
              cancel: "Cancel",
              save: "Save",
              setAsPrivate: "Set as Private",
              addToList: "Add to List",
              sqlSchema: "SQL Schema",
              confirm: "Confirm",
              favoriteSignInError: "Sign in to access your lists",
              feedbackSignInError: "Sign in to give feedback",
              likeSignInError: "Sign in to like or dislike this question",
              mysqlCopySuccess: "Successfully copied to clipboard",
              shareQuestionDescription:
                "Check out this coding interview problem on LeetCode!",
              viewMyLists: "View my Lists",
              searchPlaceholder: "Search...",
              similarQuestions: "Similar Questions",
            },
            submissions: {
              runtime: "Runtime",
              memory: "Memory",
              beat: "Beats",
              noData: "No data",
              noSubmission: "Submission does not exist",
              noCode: "There is no code here",
              copied: "Copied",
              pending: "Pending...",
              includesNotes: "Includes Notes",
              success: {
                accept: "Accepted",
                timeTaken: "Time taken: {{time}}",
                nextQuestion: "Next question",
                moreChallenges: "More challenges",
                second_short: "s",
                minute_short: "m",
                hour_one: "hr",
                hour_other: "hrs",
              },
              details: {
                myCode: "My Submitted Code",
                otherCode: "My Submitted Code",
                sampleCode: "Sample {{metric}} submission",
                backToMyCode: "Back to my position",
                chartHintForAction: "Click on the chart to check sample codes",
                fetchingCodeFromServer: "Fetching code from server...",
              },
              buttons: {
                close: "Close",
                details: "Details",
                solution: "Solution",
              },
              filters: {
                allStatuses: "All statuses",
                allLanguages: "All languages",
              },
              notes: {
                label: "Notes",
                placeholder: "Write your notes here",
              },
              relatedTags: {
                label: "Related Tags",
                placeholder: "Select tags",
                startTyping: "Start typing to find a tag",
                noResults: "No tags found",
              },
              chart: {
                runtimeDescription:
                  "Accepted Solutions Runtime Distribution (%)",
                memoryDescription: "Accepted Solutions Memory Distribution (%)",
                runtimeShortDescription: "Distribution (%)",
                memoryShortDescription: "Distribution (%)",
                youAreHere: "You are here!",
                hintForAction: "Click to check the distribution chart",
                runtime: "Runtime",
                memory: "Memory",
                percentLabel: "{{percent}}% of solutions used",
                runtimeValueLabel: "{{value}} ms of runtime",
                memoryValueLabel: "{{value}} MB of memory",
                noData:
                  "Sorry, there are not enough accepted submissions to show data",
              },
              nonSignedIn: {
                signInTitle: "🔥 Join LeetCode to Code!",
                signInInfo: "View your Submission records here",
                signInButton: "Register or Sign In",
              },
              failedSubmission: {
                runtimeError: "Runtime Error",
                compileError: "Compile Error",
                lastTestcase: "Last Executed Input",
              },
            },
            "feature-guide": {
              layout:
                "Drag the divider to resize the window based on your preference!",
              timer:
                "<0>Timer:</0> Use the new timer feature to record how much time you spend solving a question!",
              debugger:
                "<0>Debugger:</0> Use the debugger feature to make debugging easy peasy.",
              problemSwitch:
                "Quickly navigate to the <0>previous/next question</0> here",
              problemList: "Quickly navigate to the <0>previous page</0> here",
              discussion:
                "Post any ideas in the <0>Discussion</0>. If you want to share a solution, share it under the solution tab!",
              solution:
                "Share your solution with other users, and find LeetCode's official solution alongside other users' solutions here.",
              back: "Back",
              skip: "Skip",
              next: "Next",
              ok: "OK",
              title: "🎉 Introducing our new question page!",
            },
            solutions: {
              filter: {
                searchPlaceholder: "Search",
                tags: {
                  placeholder: "Tags",
                  searchPlaceholder: "Filter tags",
                  languages: "Languages",
                  topicTags: "Topics",
                  expand: "Expand",
                  collapse: "Collapse",
                  noResults: "No results",
                  reset: "Reset",
                },
                sortBy: {
                  placeholder: "Sort by",
                  hot: "Hot",
                  most_posts: "Most Posts",
                  most_relevant: "Most Relevant",
                  most_votes: "Most Votes",
                  newest_to_oldest: "Most Recent",
                  oldest_to_newest: "Oldest to Newest",
                  recent_activity: "Recent Activity",
                  hot_short: "Hot",
                  newest_to_oldest_short: "Recent",
                  most_votes_short: "Votes",
                  most_relevant_short: "Relevant",
                },
              },
              comments: {
                edited: "(Edited)",
                tooShort: "Comment is too short",
                noComments: "No comments yet.",
                reply: "Reply",
                mentionInputPlaceholder: "Tag a user or a problem",
                user: "Users",
                problem: "Problems",
                mdRules: {
                  inlineCode: "your inline code...",
                  codeBlock: "code block",
                  link: "leetcode",
                  href: "https://leetcode.com",
                },
                pinnedBy: "Pinned by {{pinnedBy}}",
                share: "Share",
                edit: "Edit",
                shareCopySuccess: "Copied link to clipboard",
                hideReplies: "Hide Replies",
                showReplies: "Show {{num}} Replies",
                cancel: "Cancel",
                confirm: "Confirm",
                preview: "Preview",
                comment: "Comment",
                typeCommentHere: "Type comment here... (Markdown supported)",
                comments: "Comments",
                sortBy: "Sort by",
                newestToOldest: "Newest to Oldest",
                oldestToNewest: "Oldest to Newest",
                mostVotes: "Most Votes",
                best: "Best",
                editor: "Editor",
                youMust: "You must",
                verifyYourEmail: "verify your email",
                first: "first",
                readMore: "Read more",
                somethingWentWrong: "Something went wrong",
                areYouSure: "Are you sure?",
                confirmDeleteComment:
                  "Are you sure you want to delete this comment?",
                confirmRestoreComment:
                  "Are you sure you want to restore this comment?",
                confirmHideComment:
                  "Are you sure you want to hide this comment from non-authors?",
                confirmShowComment:
                  "Are you sure you want to show this comment to everyone?",
                confirmPinComment: "Are you sure you want to pin this comment?",
                confirmUnpinComment:
                  "Are you sure you want to unpin this comment?",
                reward: "Reward",
                delete: "Delete",
                hide: "Hide",
                show: "Show",
                askQuestion: "Ask Question",
                feedback: "Feedback",
                tips: "Tips",
                chooseAType: "Choose a type",
                showMoreReplies: "Show more replies",
                hideSuccess: "Comment hidden from non-authors.",
                showSuccess: "Comment now visible to everyone.",
                pinSuccess: "Comment has been pinned.",
                unpinSuccess: "Comment has been unpinned.",
                deleteSuccess: "Comment Successfully Deleted",
                restore: "Restore",
                restoreSuccess: "Comment Successfully Restored",
                hidden: "Hidden",
                report: "Report",
                pin: "Pin",
                pinned: "Pinned",
                unpin: "Unpin",
                hideComment: "Hide Comment",
                showComment: "Show Comment",
                move: "Move to Solution",
                moveTitle: "Title:",
                moveTitlePlaceholder: "Enter title here",
                moveSuccess: "Comment Successfully Moved",
                genericError: "Something went wrong",
                postSuccess: "Comment Successfully Post",
              },
              solution: "Solution",
              writeSolution: "Solution",
              continueSolution: "Solution",
              videoSolutionTooltip: "Video Solution",
              premiumOnlyTooltip: "Premium Solution",
              tags: {
                official: "Official",
                pinned: "Pinned",
                favorite: "My Favorite",
                mySolution: "My Solution",
              },
              post: {
                prevLabel: "Previous",
                nextLabel: "Next",
                isAdmin: "Admin",
                reputationTooltip: "Reputation",
                share: "Share",
                addToCollection: "Favorite",
                isInCollection: "Favorite",
                votes: "({{votesCount}} votes)",
                shareCopySuccess: "Copied link to clipboard",
                addToFavoriteSuccess: "Added to favorite solutions",
                removeFromFavoriteSuccess: "Removed from favorite solutions",
                feedbackTooltip: "Feedback",
                backToTop: "Back to top",
                genericError: "Something went wrong",
                signInVoteError: "You must sign in to vote",
                verifyVoteError: "You must verify your email to vote",
                rateSuccess: "Thanks for rating this solution!",
                more: {
                  error: "Something went wrong",
                  cancel: "Cancel",
                  edit: "Edit",
                  subscribe: "Subscribe",
                  subscribeMessage: "Subscribed",
                  unsubscribe: "Unsubscribe",
                  unsubscribeMessage: "Unsubscribed",
                  delete: "Delete",
                  deleteMessage: "Deleted",
                  deleteConfirmText:
                    "Are you sure you want to delete this post?",
                  deleteConfirmBtn: "Delete",
                  restore: "Restore",
                  restoreMessage: "Restored",
                  restoreConfirmText:
                    "Are you sure you want to restore this post?",
                  restoreConfirmBtn: "Restore",
                  report: "Report",
                  reportMessage: "Reported",
                  pin: "Pin",
                  pinMessage: "Pinned",
                  pinConfirmText: "Are you sure you want to pin this post?",
                  pinConfirmBtn: "Pin",
                  unpin: "Unpin",
                  unpinMessage: "Unpinned",
                  unpinConfirmText: "Are you sure you want to unpin this post?",
                  unpinConfirmBtn: "Unpin",
                  hide: "Hide",
                  hideMessage: "Hid the post",
                  hideConfirmText: "Are you sure you want to hide this post?",
                  hideConfirmBtn: "Hide",
                  hideFromTrending: "Hide from trending",
                  hideFromTrendingMessage: "Hid post from trending",
                  hideFromTrendingConfirmText:
                    "Are you sure you want to hide this post from trending?",
                  hideFromTrendingConfirmBtn: "Hide from trending",
                  show: "Show",
                  showMessage: "Showed the post",
                  showConfirmText:
                    "Are you sure you want to show this post to everyone?",
                  showConfirmBtn: "Show",
                  moveToDiscussion: "Move to Discussion",
                  moveToDiscussionMessage: "Moved to Discussion",
                  moveToDiscussionConfirmText:
                    "Are you sure you want to move this post to Discussion?",
                  moveToDiscussionConfirmBtn: "Move to Discussion",
                },
              },
              sidebar: {
                comments: "Comments",
                favorite: "Favorited",
                views: "Views",
                relatedTags: "Related Tags",
                relatedSolutions: "Related Solutions",
              },
              searchResult: {
                commentPrefix: " comment",
                replyPrefix: " reply to ",
                colon: ": ",
              },
              noDirectResultsHint: "No results. Here are some related threads.",
              noResults: "There aren't any solution topics here yet!",
              report: {
                reportModalTitle: "Report this content",
                contentPlaceholder: "Additional feedback",
                cancel: "Cancel",
                confirm: "Confirm",
                advertising: "Spam advertising",
                sexual: "Sexual content",
                violent: "Violent content",
                terrorism: "Promotes terrorism",
                illegal: "Illegal content",
                abuse: "Abuse others",
                nonEnglish: "Non English content",
                other: "Others",
                reportSuccess: "Report submitted!",
                reportError: "Couldn't submit the report, please try again",
              },
              blocker: {
                subscribeToUnlock: "Subscribe to unlock.",
                subscribeSubTitle:
                  "Thanks for using LeetCode! To view this solution you must subscribe to premium.",
                subscribe: "Subscribe",
              },
            },
            "post-solution": {
              meta: {
                newTitle: "{{title}} - LeetCode - New Solution",
                editTitle: "{{title}} - LeetCode - Edit Solution",
              },
              filterTopic: "Filter topics",
              publishSolution: "Solution",
              publishSolutionTooltip:
                "Submit at least 1 AC to publish a solution",
              restore: "Restore from draft",
              overwriteWithLastAc: "Overwrite with the latest AC submission",
              generatedWithSources: {
                lastAc: "Generated from the latest AC submission",
                submission: "Generated from the chosen submission",
                draft: "Restored from draft",
              },
              editingSolution: "Editing the existing solution",
              blockCode: "Code Block",
              tag: "Tag",
              related: "Related",
              selectATag: "Please select at least one tag",
              post: "Post",
              publishError: "Could not publish solution",
              imgUploadSuccuss: "Upload successfully",
              imgUploadError: "Upload failure",
              guideTooltip: "Markdown Guide",
              saved: "Saved",
            },
          },
          zh: {
            common: {
              404: {
                title: "力扣",
                pageNotFound: "页面不存在",
                message: "抱歉！我们找不到您想访问的页面...",
              },
              meta: {
                title: "",
                description: "",
                keywords: "",
              },
              ok: "好",
              cancel: "取消",
              confirm: "确认",
              update: "更新",
              submit: "提交",
              netFailed: "网络错误",
              header: {
                logo: {
                  url: "",
                  description: "",
                },
                title: {
                  "problemset-all": "",
                },
                action: {
                  login: {
                    text: "",
                    url: "",
                  },
                },
              },
              conjunctions: {
                and: "and",
                or: "或",
              },
              pages: {
                leetcode: "LeetCode",
                explore: "学习",
                problems: "题库",
                interview: {
                  interview: "求职",
                  onlineInterview: "在线面试",
                  assessment: "Assessment",
                },
                contest: "竞赛",
                discuss: "讨论",
                store: {
                  store: "商店",
                  redeem: "力扣周边",
                  premium: "Plus 会员",
                  shop: "精品商城",
                },
                admin: {
                  admin: "管理员",
                  library: "题库",
                  translation: "翻译",
                  operations: "运营管理",
                  scores: "点数",
                  contribute: "贡献",
                  backend: "后台管理",
                  twoStepVerification: "二步验证",
                  internalContest: "Internal Contest Dashboard",
                  contestAdmin: "Contest Cheating Dashboard",
                  dangerZone: "Danger Zone",
                  review: "Review",
                  contestDashboard: "Contest Dashboard",
                },
                mobileApp: "下载 App",
                playground: "Playground",
                myPlayground: "我的 Playground",
                signIn: "登录",
                register: "注册",
                signOut: "退出",
              },
              userMenu: {
                renew: "续订",
                getPremium: "升级 Plus 会员享专属特权",
                orders: "订单",
                resume: "简历信息",
                translateQuestions: "题目以中文展示",
                translateQuestionsEn: "题目以英文显示",
                enterprise: "企业招聘",
                revertToOldVersion: "回到旧版",
                categories: {
                  myList: "收藏夹",
                  notebook: "笔记本",
                  submissions: "我的题解",
                  session: "进度管理",
                  points: "积分",
                  progress: "做题分析",
                },
                unmockUser: "Unmock User",
                account: "个人设置",
              },
              streakCounter: {
                finished: "干的好！明天再来挑战！",
                unfinished: "解决今天的「每日 1 题」，刷新你的连胜记录！",
                buyTimeTravelTicket: "购买补签卡",
                missedOneDayThisMonth: "这个月你错过了 1 天.",
                missedDaysThisMonth: "这个月你错过了 {{count}} 天.",
              },
              playground: {
                playground: "Playground",
                remainingPlaygrounds: "数量",
                renew: "升级",
                myPlaygrounds: "我的 Playgrounds",
                templates: {
                  consoleApplication: "控制台程序",
                  empty: "空白 Playground",
                  frontend: "前端程序",
                  machineLearning: "机器学习",
                },
              },
              links: {
                admin: {
                  scores: "/library/scores",
                  translation: "/contribution/translation/question/admin/",
                  operations: "/management",
                },
                premium: "/premium",
                discuss: "/circle",
                interview: "/company",
                shop: "https://detail.youzan.com/show/goods/newest?alias=271n43vr9hen7",
                onlineInterview: "https://leetcode.cn/interview",
                profileArticles: "/profile/articles",
                orders: "/order",
                explore: "/leetbook",
                resume: "/profile/resume/",
                playground: "/playground",
                assessment: "/assessment/",
                account: "/profile/account",
              },
              pagination: {
                perpage: " 条/页",
              },
              expand: "展开",
              collapse: "收起",
              difficulty: {
                easy: "简单",
                medium: "中等",
                hard: "困难",
              },
              data: {
                question: {
                  difficulty: {
                    easy: "简单",
                    medium: "中等",
                    hard: "困难",
                  },
                },
              },
              markdown: {
                heading: "heading",
                quote: "Quote",
              },
              mentions: {
                users: "用户",
                problems: "题目",
              },
              confirmModal: {
                title: "确定执行此操作?",
                confirmBtn: "确定",
                cancelBtn: "取消",
              },
              saving: "保存中...",
              saved: "保存成功",
              autoSaved: "已自动保存",
              loginRequired: "您尚未登录",
              verifiedRequired: "请绑定手机号或者邮箱后继续操作",
              phoneVerifiedRequired: "请绑定手机号后继续操作",
              maybeVerifiedRequired: "请绑定手机号后继续操作",
              copied: "已复制",
              dailyCheckIn: "+1 Daily Check-in (Please translate)",
              "//maybeVerifiedRequired":
                "maybeVerifiedRequired means email in LCUS and phone in LCCN",
              easterEgg: {
                rewardMessage: "恭喜您获得了 10 积分，Happy LeetCoding!",
              },
              survey: {
                veryDissatisfied: "Very Dissatisfied",
                verySatisfied: "Very Satisfied",
                next: "Next",
                continue: "Continue",
                submit: "Submit",
                questionNo: "Question {{current}} of {{total}}",
                thanksMsg: "🎉 Thanks for your feedback!",
              },
            },
            problems: {
              meta: {
                title: "{{title}} - 力扣（Leetcode）",
                description: "{{title}} - {{content}}",
                ogImage:
                  "https://static.leetcode-cn.com/cn-legacy-assets/images/LeetCode_Sharing.png",
                defaultDescription:
                  "备战技术面试？力扣提供海量技术面试资源，帮助你高效提升编程技能,轻松拿下世界 IT 名企 Dream Offer。",
              },
              tabs: {
                description: "题目描述",
                discussion: "讨论",
                solutions: "题解",
                submissions: "提交记录",
              },
              feedback: {
                feedback: "反馈",
                revertToOld: "回退到上一个版本",
              },
              lockedQuestion: {
                subscribe: "升级 Plus 会员",
                subscribeToUnlockMessage:
                  "感谢使用力扣！您需要升级为 Plus 会员来解锁该题目",
                subscribeToUnlock: "该题目是 Plus 会员专享题",
              },
              satisfactionSurvey: {
                submitBtnText: "Get LeetCoins",
              },
            },
            console: {
              meta: {
                title: "题目详情",
              },
              console: {
                console: "控制台",
                run: "运行",
                submit: "提交",
                resetTestcases: "重置测试用例",
                debug: "调试",
                testcase: "测试用例",
                debugger: "调试器",
                testcaseNumber: "Case {{ number }}",
                cloneCurrentTestcase: "克隆当前用例",
                switchConsoleToLeft: "控制台置于左侧",
                switchConsoleToRight: "控制台置于右侧",
                testcasePlaceholder: "请输入测试用例",
                result: {
                  result: "执行结果",
                  stdout: "标准输出",
                  noResult: "请先执行代码",
                  slowdown: {
                    premium: "你的提交过于频繁，请稍候重试",
                    first: "你的提交过于频繁，请稍候重试，或",
                    second: "升级 Plus 会员",
                    third: "，可减少等待时间",
                  },
                  networkError: "网络错误，请稍后刷新页面重试",
                  serverError:
                    "未知的服务器错误，请联系我们的团队进行技术支持。",
                  compileError: "编译出错",
                  runtimeError: "执行出错",
                  copyCompileError: "复制错误信息",
                  copied: "已复制",
                  outputLimitExceeded: "超出输出限制",
                  timeLimitExceeded: "超出时间限制",
                  memoryLimitExceeded: "超出内存限制",
                  timeout: "请求超时",
                  internalError: "内部错误",
                  accepted: "通过",
                  wrongAnswer: "解答错误",
                  invalidTestcase: "测试用例非有效值",
                  runtime: "执行用时",
                  input: "输入",
                  output: "输出",
                  expected: "预期结果",
                  contribution: "贡献测试用例",
                  pending: "运行中...",
                  premiumPending: "极速判题中...",
                  judging: "判题中...",
                  debugging: "调试中...",
                  speedUp: "开启极速判题",
                  lastExecutedInput: "最后执行的输入",
                  testcasesPassed: "个通过的测试用例",
                  useTestcaseAsInput: "添加到测试用例",
                  cantUseTestcaseAsInput: "测试用例数达到最大限制",
                  debugger: "调试器",
                  copyContent: "已复制到剪切板",
                  moreLine_one: "更多",
                  moreLine_other: "更多",
                },
                info: {
                  info: "注意",
                  content:
                    "<0>执行代码与提交代码的结果不同？如果您在C/C++的代码中使用了全局变量，请看</0> <1>这里</1>",
                  ok: "确定",
                  howToCreateBinaryTreeTestcases: "如何创建二叉树测试用例？",
                  howToCreateDatabaseTestcases: "如何创建数据库测试用例？",
                },
                execute: "Execute",
                to: "to",
                fullTreeTooBig: "数据太大，无法展示",
                or: "or",
                showFullTree: "点击查看完整的二叉树",
              },
              visualizer: {
                dataTooLarge: "数据量过大，只展示部分",
                parseFailed: "生成错误，请检查格式是否正确",
                dataNotSupported: "不支持可视化",
                outputDataTypeNotSupported: "输出类型不支持可视化",
                initFailed: "画布初始化失败，请刷新页面重试",
              },
              verifyEmail: "请绑定邮箱后继续操作",
              signToRunOrSubmit: "{{action}}需要登录",
              signToRunAndSubmit: "运行和提交代码需要<0>登录</0>",
              verifyToRunAndSubmit: "您的手机号尚未绑定，<0>前往验证</0>！ ",
              notAvailableDuringDebugging: "调试状态不可用",
              notAvailableDuringExecuting: "代码执行中不可用",
              nonVerifyMsg: "请绑定手机号后继续操作",
              oneClickDebug: "一键调试",
            },
            "code-editor": {
              commonConfirmTitle: "操作确认",
              fullScreen: "全屏",
              exitFullScreen: "退出全屏",
              lsp: {
                autocomplete: "智能模式",
                connectFail: "连接失败",
                langNotSupportLSP: "该语言暂不支持智能补全 / 语法检查",
                info: "智能补全/语法检查",
              },
              langNotSupportLSP: "该语言暂不支持智能补全 / 语法检查",
              langInfo: "了解语言环境",
              settings: {
                name: "代码编辑器设置",
                fontSize: "字体设置",
                fontSizeDesc: "调整适合你的字体大小。",
                theme: "主题设置",
                themeDesc: "切换不同的代码编辑器主题，选择适合你的语法高亮。",
                themeDark: "Dark",
                themeLight: "Light",
                themeSystem: "System",
                keyBinding: "键位绑定",
                keyBindingDesc:
                  "想要练习使用 Vim 或者 Emacs？你可以在这里切换这些预设的键位绑定。",
                keyBindingVim: "Vim",
                keyBindingEmacs: "Emacs",
                keyBindingStandard: "Standard",
                tabSize: "Tab 长度",
                tabSizeDesc: "选择你想要的 Tab 长度，默认设置为4个空格。",
                spaces: "{{count}}",
              },
              shortcuts: {
                name: "编辑器快捷键",
                run: "执行代码",
                submit: "提交解答",
                debug: "调试",
                indent: "行缩进",
                indentFew: "行减少缩进",
                moveLines: "上下移动行",
                cut: "剪切",
                toggleComment: "切换行注释",
                undo: "撤销",
                redo: "重做",
              },
              reset: {
                tip: "还原到默认的代码模版",
                confirmContent: "您将放弃所有更改并初始化代码！",
                resetServer: "您的代码已在 {{time}} 保存在云端,",
                restore: "恢复",
              },
              history: {
                title: "添加了备注的 {{lang}} 提交记录",
                tip: "获取备注过的提交记录",
                description:
                  "仅展示当前语言下提交的代码；选中并确认后，当前代码编辑区的全部内容将会被替换。",
                status: "结果",
                runtime: "执行用时",
                memory: "消耗内存",
                time: "时间",
                topic: "标签",
                notes: "备注",
                noNotes: "暂无提交记录！",
              },
              timer: {
                start: "开始计时",
                hide: "隐藏",
                show: "展示",
                reset: "重置",
              },
              debugger: {
                loginToDebug: "启用调试功能需要登录",
                name: "调试器",
                stdout: "标准输出",
                input: "输入",
                enterTip: "点击行号添加断点",
                exit: "退出调试",
                start: "开始调试",
                stop: "停止调试",
                startShort: "调试",
                stopShort: "停止",
                watch: "监听表达式",
                local: "本地变量",
                watchHolder: "请输入需要监听的变量，按回车确认",
                controlStart: "开始调试 F5",
                controlForward: "继续 F5",
                controlStepOver: "单步跳过 F10",
                controlStepOut: "单步跳出 Ctrl+F11",
                controlStepOutMac: "单步跳出 ⌘+F11",
                controlStepIn: "单步调试 Shift+F11",
                controlStepInMac: "单步调试 ⇧+F11",
                controlReset: "重置 Ctrl+Shift+F5",
                controlResetMac: "重置 ⌘+⇧+F5",
                exited: "已经有一个调试会话在运行，是否将其终止？",
                startToWatch: "开启调试后查看表达式",
                watchTip: "开启调试才可添加表达式",
                startViewVars: "开启调试查看本地变量",
                noVars: "暂无变量",
                startViewOutput: "开启调试查看输出",
                noOutput: "暂无输出...",
                edited: "代码已变更，需要重启调试",
                cantAddTestcase: "您已達到最大測試用例數",
              },
              markDownPlaceholder: "请输入...(支持使用 Markdown)",
              retrieveCode: {
                tip: "还原到最新提交的代码",
                confirmContent:
                  "您将放弃所有更改并以最新提交的代码替换当前代码编辑区的全部内容！",
                noData: "您尚未提交过任何代码！",
              },
            },
            description: {
              status: {
                tried: "尝试过",
                ac: "已解答",
              },
              somethingWentWrong: "网络错误",
              thanksForVoting: "感谢反馈！",
              companies: "相关企业",
              pastSixMonths: "0 - 6 个月",
              pastYear: "6 个月 - 1 年",
              pastTwoYears: "1 年 - 2 年",
              companyPremiumAccess:
                "升级力扣 Plus 会员后，可查看面试中出现该题目的企业",
              companySubscribe: "订阅",
              hint: "提示",
              showHints: "显示提示",
              moreActions: "更多操作",
              feedback: "反馈",
              showEnglish: "切换为英文",
              showChinese: "切换为中文",
              feedbackForm: {
                title: "反馈",
                alternative: "您也可以通过 <0>GitHub 快速反馈通道</0> 进行提交",
                cancel: "取消",
                submit: "提交",
                issuesEncountered: "遇到问题",
                problem: "题目",
                somethingWentWrong: "网络错误",
                additionalFeedback: "额外的反馈",
                description: "我们将致力于提高题目质量，你不喜欢的理由是什么？",
                options: {
                  unclearDescription: "描述和示例不清楚或不正确",
                  unclearDifficulty: "难度不准确",
                  unclearTestCases: "测试用例缺失或不正确",
                  runtimeStrict: "时间要求太严格",
                  edgeCases: "边界情况太多",
                  other: "其他",
                  otherPlaceholder: "额外的反馈",
                },
                optionRequiredError: "至少选择一个选项.",
              },
              accepted: "通过次数",
              submissions: "提交次数",
              acRate: "通过率",
              copyright: "© {{year}} 领扣网络（上海）有限公司",
              yes: "是",
              no: "否",
              add2: "添加",
              seenBefore: "请问您在哪类招聘中遇到此题？",
              whichCompany: "请问您应聘的哪家公司？",
              whichPosition: "请问您应聘的岗位类型？",
              whichTimePeriod: "您是在什么时候遇到该题的？",
              whichStage: "请问您进行了哪种形式的面试？",
              thanksForFeedback: "🎉 谢谢您的反馈！",
              relatedTopics: "相关标签",
              add: "加入",
              remove: "移除",
              createNewList: "创建新列表",
              nameListPlaceholder: "请输入列表标题",
              cancel: "取消",
              save: "保存",
              setAsPrivate: "设为私有",
              addToList: "加入收藏夹",
              sqlSchema: "SQL Schema",
              confirm: "确定",
              favoriteSignInError: "登录后才能收藏题目",
              changeLanguageError: "登录后才能切换语言",
              feedbackSignInError: "登录后才能反馈问题",
              likeSignInError: "登录后才能点赞",
              mysqlCopySuccess: "已复制到剪贴板",
              shareQuestionDescription: "分享题目",
              viewMyLists: "查看我的收藏夹",
              searchPlaceholder: "搜索",
              ok: "OK",
              addToListError: "Something went wrong. Please try again.",
              similarQuestions: "相似题目",
            },
            submissions: {
              runtime: "时间",
              memory: "内存",
              beat: "击败",
              noData: "暂无数据",
              noSubmission: "暂无数据",
              copied: "已复制",
              success: {
                accept: "通过",
                timeTaken: "用时: {{time}}",
                nextQuestion: "下一题",
                moreChallenges: "更多挑战",
                second_short: "s",
                minute_short: "m",
                hour_one: "hr",
                hour_other: "hrs",
              },
              details: {
                myCode: "我提交的代码",
                otherCode: "他提交的代码",
                sampleCode: "{{metric}} 的代码示例",
                backToMyCode: "返回我的位置",
                chartHintForAction: "点击查看代码",
                fetchingCodeFromServer: "加载中...",
              },
              buttons: {
                close: "关闭",
                details: "详情",
                solution: "写题解",
              },
              filters: {
                allStatuses: "所有状态",
                allLanguages: "所有语言",
              },
              notes: {
                label: "备注",
                placeholder: "在此输入备注",
              },
              relatedTags: {
                label: "相关标签",
                placeholder: "选择标签",
                startTyping: "搜索标签",
                noResults: "暂无标签",
              },
              chart: {
                runtimeDescription: "执行用时 (%)",
                memoryDescription: "消耗内存 (%)",
                youAreHere: "你在这里",
                hintForAction: "点击图片查看分布详情",
                runtime: "执行用时分布",
                memory: "消耗内存分布",
                percentLabel: "{{percent}}% 的用户使用了类似解法",
                runtimeValueLabel: "Runtime: {{value}} ms",
                memoryValueLabel: "Memory: {{value}} MB",
                noData: "加载中，暂无数据",
                memoryShortDescription: "Distribution (%)",
                runtimeShortDescription: "Distribution (%)",
              },
              nonSignedIn: {
                signInTitle: "🔥 登录力扣开始写代码",
                signInInfo: "这里会展示你的提交记录 ",
                signInButton: "登录/注册",
              },
              noCode: "There is no code here",
              pending: "Pending...",
              includesNotes: "含有备注",
              failedSubmission: {
                runtimeError: "执行出错信息",
                compileError: "编译出错信息",
                lastTestcase: "最后执行的输入",
              },
            },
            "feature-guide": {
              layout: "支持上下、左右拖拽调整布局",
              timer: "<0>计时器：</0> 现在可以在做题过程中使用计时器了！",
              debugger: "<0>调试器：</0> 我们将 Debugger 移动到了这里",
              problemSwitch: "这里可以快速切换到 <0>上一题/下一题</0> ",
              problemList: "这里可以快速返回<0>题目列表</0>",
              discussion: "新的 <0>“讨论”，</0> 您可以发布任何想法",
              solution: "将 <0>“评论”</0> 的名字修改为新的 <0>“题解” 名</0>",
              back: "返回",
              skip: "跳过",
              next: "下一步",
              ok: "确定",
              title: "🎉 我们的新界面",
            },
            solutions: {
              filter: {
                searchPlaceholder: "搜索",
                tags: {
                  placeholder: "标签",
                  searchPlaceholder: "搜索标签",
                  languages: "语言",
                  topicTags: "主题",
                  expand: "展开",
                  collapse: "收起",
                  noResults: "暂无结果",
                  reset: "重置",
                },
                sortBy: {
                  placeholder: "排序",
                  hot: "热度最高",
                  most_posts: "发布数量",
                  most_relevant: "默认排序",
                  most_votes: "点赞最多",
                  newest_to_oldest: "最新发布",
                  oldest_to_newest: "最早发布",
                  recent_activity: "默认排序",
                  recent_activity_short: "默认排序",
                  hot_short: "热度最高",
                  newest_to_oldest_short: "最新发布",
                  oldest_to_newest_short: "最早发布",
                  most_votes_short: "点赞最多",
                  most_relevant_short: "默认排序",
                },
              },
              comments: {
                edited: "(编辑过)",
                tooShort: "评论过短",
                noComments: "暂无评论",
                reply: "回复",
                mentionInputPlaceholder: "用户或题目",
                user: "用户",
                problem: "题目",
                mdRules: {
                  inlineCode: "行内代码...",
                  codeBlock: "code block",
                  link: "leetcode",
                  href: "https://leetcode.cn",
                },
                pinnedBy: "被 {{pinnedBy}} 置顶",
                share: "分享",
                edit: "编辑",
                shareCopySuccess: "已复制到剪切板",
                hideReplies: "隐藏回复",
                showReplies: "展示 {{num}} 条回复",
                cancel: "取消",
                confirm: "确定",
                preview: "预览",
                comment: "评论",
                typeCommentHere: "请输入评论...",
                comments: "评论",
                sortBy: "排序",
                newestToOldest: "最新",
                oldestToNewest: "最早",
                mostVotes: "赞成数",
                best: "最热",
                editor: "编辑",
                youMust: "您需要先",
                verifyYourEmail: "绑定邮箱",
                first: "first",
                readMore: "展开全部",
                somethingWentWrong: "未知错误",
                areYouSure: "操作确认",
                confirmDeleteComment: "确定删除该条评论？",
                confirmRestoreComment: "确定恢复该条评论？",
                confirmHideComment: "确定将该条评论灰色屏蔽？",
                confirmShowComment: "确定将该条评论取消灰色屏蔽？",
                confirmPinComment: "确定置顶该评论？",
                confirmUnpinComment: "确定移除置顶？",
                reward: "赞赏",
                delete: "删除",
                hide: "隐藏",
                show: "展示",
                askQuestion: "问问题",
                feedback: "反馈",
                tips: "提示",
                chooseAType: "请选择一个类型",
                showMoreReplies: "展示更多",
                hideSuccess: "灰色屏蔽成功.",
                showSuccess: "取消灰色屏蔽成功.",
                pinSuccess: "Comment has been pinned.",
                unpinSuccess: "Comment has been unpinned.",
                deleteSuccess: "删除成功",
                restore: "Restore",
                restoreSuccess: "成功恢复评论",
                hidden: "Hidden",
                report: "举报",
                pin: "设为精选",
                pinned: "精选",
                unpin: "取消精选",
                hideComment: "灰色屏蔽",
                showComment: "取消灰色屏蔽",
                move: "Move to Solution",
                moveTitle: "Title:",
                moveTitlePlaceholder: "Enter title here",
                moveSuccess: "Comment Successfully Moved",
                postSuccess: "发布成功",
                genericError: "Something went wrong",
                signInVoteError: "You must sign in to vote",
                verifyVoteError: "You must verify your email to vote",
              },
              solution: "题解",
              writeSolution: "写题解",
              continueSolution: "继续写题解",
              tags: {
                official: "官方",
                pinned: "精选",
                favorite: "收藏",
                mySolution: "我的题解",
              },
              post: {
                prevLabel: "上一篇题解",
                nextLabel: "下一篇题接",
                isAdmin: "管理员",
                reputationTooltip: "声望",
                share: "分享",
                addToCollection: "收藏",
                isInCollection: "已收藏",
                votes: "({{votesCount}} votes)",
                shareCopySuccess: "分享链接复制到剪切板",
                addToFavoriteSuccess: "添加成功",
                removeFromFavoriteSuccess: "移除成功",
                feedbackTooltip: "反馈",
                backToTop: "回到顶部",
                genericError: "未知错误",
                more: {
                  error: "网络错误",
                  cancel: "取消",
                  edit: "编辑",
                  subscribe: "Subscribe",
                  subscribeMessage: "Subscribed",
                  unsubscribe: "Unsubscribe",
                  unsubscribeMessage: "Unsubscribed",
                  delete: "删除",
                  deleteMessage: "删除成功",
                  deleteConfirmText: "确定删除?",
                  deleteConfirmBtn: "删除",
                  restore: "Restore",
                  restoreMessage: "Restored",
                  restoreConfirmText:
                    "Are you sure you want to restore this post?",
                  restoreConfirmBtn: "Restore",
                  report: "举报",
                  reportMessage: "举报成功",
                  pin: "Pin",
                  pinMessage: "Pinned",
                  pinConfirmText: "Are you sure you want to pin this post?",
                  pinConfirmBtn: "Pin",
                  unpin: "Unpin",
                  unpinMessage: "Unpinned",
                  unpinConfirmText: "Are you sure you want to unpin this post?",
                  unpinConfirmBtn: "Unpin",
                  hide: "Hide",
                  hideMessage: "Hid the post",
                  hideConfirmText: "Are you sure you want to hide this post?",
                  hideConfirmBtn: "Hide",
                  hideFromTrending: "Hide from trending",
                  hideFromTrendingMessage: "Hid post from trending",
                  hideFromTrendingConfirmText:
                    "Are you sure you want to hide this post from trending?",
                  hideFromTrendingConfirmBtn: "Hide from trending",
                  show: "Show",
                  showMessage: "Showed the post",
                  showConfirmText:
                    "Are you sure you want to show this post to everyone?",
                  showConfirmBtn: "Show",
                  moveToDiscussion: "Move to Discussion",
                  moveToDiscussionMessage: "Moved to Discussion",
                  moveToDiscussionConfirmText:
                    "Are you sure you want to move this post to Discussion?",
                  moveToDiscussionConfirmBtn: "Move to Discussion",
                },
                rateSuccess: "Thanks for rating this solution!",
              },
              sidebar: {
                comments: "评论人数",
                favorite: "收藏次数",
                views: "浏览次数",
                relatedTags: "标签",
                relatedSolutions: "相关题解",
              },
              searchResult: {
                commentPrefix: " comment",
                replyPrefix: " reply to ",
                colon: ": ",
              },
              noDirectResultsHint: "No result. Show you some related content",
              noResults: "暂无相关题解内容",
              report: {
                reportModalTitle: "举报",
                contentPlaceholder: "其他",
                cancel: "取消",
                confirm: "确认",
                advertising: "骚扰广告",
                sexual: "黄色内容",
                violent: "暴力内容",
                terrorism: "恐怖言论",
                illegal: "违法内容",
                politics: "政治言论",
                abuse: "辱骂他人",
                fake: "造谣传谣",
                nonEnglish: "Non English content",
                other: "其他",
                reportSuccess: "提交成功",
                reportError: "提交遇到问题，请稍后再试！",
              },
              blocker: {
                subscribeToUnlock: "Subscribe to unlock.",
                subscribeSubTitle:
                  "Thanks for using LeetCode! To view this solution you must subscribe to premium.",
                subscribe: "Subscribe",
              },
              videoSolutionTooltip: "Video Solution",
              premiumOnlyTooltip: "Premium Solution",
            },
            "post-solution": {
              meta: {
                newTitle: "{{title}} - LeetCode - New Solution",
                editTitle: "{{title}} - LeetCode - Edit Solution",
              },
              filterTopic: "搜索标签",
              publishSolution: "写题解",
              publishSolutionTooltip: "您需要先通过这道题目才能发布题解",
              restore: "是否清空草稿？",
              discard: "清空",
              discardConfirmTitle: "您确定要清空草稿吗？",
              discardConfirmContent:
                "如果清空草稿，会删除当前编辑器中的所有内容",
              discardConfirmOk: "确定",
              discardConfirmCancel: "取消",
              guide: "力扣「Markdown 编辑器」使用说明",
              check: "查看",
              blockCode: "「代码块」",
              tag: "标签",
              related: "与题相关",
              selectATag: "请为该题解选择至少1个标签",
              post: "发布题解",
              publishError: "发布失败",
              imgUploadSuccuss: "上传成功",
              imgUploadError: "上传失败，请重试",
              guideTooltip: "Markdown 指引",
              saved: "已保存为草稿",
            },
          },
        },
        initialLocale: "en",
        userConfig: {
          i18n: {
            defaultLocale: "zh",
            locales: ["en", "zh"],
          },
          react: {
            useSuspense: false,
          },
          reloadOnPrerender: false,
          default: {
            i18n: {
              defaultLocale: "zh",
              locales: ["en", "zh"],
            },
            react: {
              useSuspense: false,
            },
            reloadOnPrerender: false,
          },
        },
      },
      revalidate: 60,
    },
    __N_SSG: true,
  },
  page: "/problems/[slug]/[[...tab]]",
  query: {
    slug: "odd-even-linked-list",
    tab: ["submissions"],
  },
  buildId: "1OUy1uaI_fNDMZpVCXpR_",
  isFallback: false,
  gsp: true,
  scriptLoader: [],
};
